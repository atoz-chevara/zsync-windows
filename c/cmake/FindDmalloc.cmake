# - find Dmalloc (Debug Malloc Library)
# DMALLOC_INCLUDE_DIR - Where to find Dmalloc (Debug Malloc Library) header files (directory)
# DMALLOC_LIBRARIES - Dmalloc (Debug Malloc Library) libraries
# DMALLOC_LIBRARY_RELEASE - Where the release library is
# DMALLOC_LIBRARY_DEBUG - Where the debug library is
# DMALLOC_FOUND - Set to TRUE if we found everything (library, includes and executable)

# Copyright (c) 2011 Pau Garcia i Quiles, <pgquiles@elpauer.org>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler

IF( DMALLOC_INCLUDE_DIR AND DMALLOC_LIBRARY_RELEASE AND DMALLOC_LIBRARY_DEBUG )
    SET(DMALLOC_FIND_QUIETLY TRUE)
ENDIF( DMALLOC_INCLUDE_DIR AND DMALLOC_LIBRARY_RELEASE AND DMALLOC_LIBRARY_DEBUG )

FIND_PATH( DMALLOC_INCLUDE_DIR dmalloc.h PATH_SUFFIXES dmalloc )

FIND_LIBRARY(DMALLOC_LIBRARY_RELEASE NAMES dmalloc )

FIND_LIBRARY(DMALLOC_LIBRARY_DEBUG NAMES dmalloc  HINTS /usr/lib/debug/usr/lib/ )

IF( DMALLOC_LIBRARY_RELEASE OR DMALLOC_LIBRARY_DEBUG AND DMALLOC_INCLUDE_DIR )
	SET( DMALLOC_FOUND TRUE )
ENDIF( DMALLOC_LIBRARY_RELEASE OR DMALLOC_LIBRARY_DEBUG AND DMALLOC_INCLUDE_DIR )

IF( DMALLOC_LIBRARY_DEBUG AND DMALLOC_LIBRARY_RELEASE )
	# if the generator supports configuration types then set
	# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
	IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
		SET( DMALLOC_LIBRARIES optimized ${DMALLOC_LIBRARY_RELEASE} debug ${DMALLOC_LIBRARY_DEBUG} )
	ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
    # if there are no configuration types and CMAKE_BUILD_TYPE has no value
    # then just use the release libraries
		SET( DMALLOC_LIBRARIES ${DMALLOC_LIBRARY_RELEASE} )
	ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
ELSEIF( DMALLOC_LIBRARY_RELEASE )
	SET( DMALLOC_LIBRARIES ${DMALLOC_LIBRARY_RELEASE} )
ELSE( DMALLOC_LIBRARY_DEBUG AND DMALLOC_LIBRARY_RELEASE )
	SET( DMALLOC_LIBRARIES ${DMALLOC_LIBRARY_DEBUG} )
ENDIF( DMALLOC_LIBRARY_DEBUG AND DMALLOC_LIBRARY_RELEASE )

IF( DMALLOC_FOUND )
	IF( NOT DMALLOC_FIND_QUIETLY )
		MESSAGE( STATUS "Found Dmalloc header file in ${DMALLOC_INCLUDE_DIR}")
		MESSAGE( STATUS "Found Dmalloc libraries: ${DMALLOC_LIBRARIES}")
	ENDIF( NOT DMALLOC_FIND_QUIETLY )
ELSE(DMALLOC_FOUND)
	IF( DMALLOC_FIND_REQUIRED)
		MESSAGE( FATAL_ERROR "Could not find Dmalloc" )
	ELSE( DMALLOC_FIND_REQUIRED)
		MESSAGE( STATUS "Optional package Dmalloc was not found" )
	ENDIF( DMALLOC_FIND_REQUIRED)
ENDIF(DMALLOC_FOUND)
